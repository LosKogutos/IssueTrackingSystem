@using IssueTrackingSystem.Models
@model TicketViewModel

@section Cardwall {
    <link href="@Href("~/Content/index")" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = "Ticket";
    var dict = new RouteValueDictionary();
    dict.Add("spacename", this.ViewContext.RouteData.Values["spacename"].ToString());
}
<div class="container">
    <div class="panel panel-primary filterable">
        <div class="panel-heading">
            <h5 class="panel-title">Ticket #@Model.Id - @Model.Title</h5>
        </div>
        <ul class="nav nav-tabs tabs-left">
            <li class="active"><a href="#details" data-toggle="tab">Details</a></li>
            <li><a href="#comments" data-toggle="tab">Comments</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="details">
                <div id="ticketPanel" class="panel-body" style="padding:30px;">
                    <div id="failureAlertDiv" class="alert alert-danger" role="alert" hidden>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <strong>Failure!</strong> Unable to update ticket. Check your data again, and try to resubmit.
                    </div>
                    <div id="successAlertDiv" class="alert alert-success" role="alert" hidden>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <strong>Success!</strong> The ticket has been updated successfully.
                    </div>
                    @Html.HiddenFor(m => m.Id, new { id = "HiddenId" })
                    <div class="row">
                        <div class="col-md-6">
                            <h3 class="row">Created By</h3>
                            <div class="row">
                                @Html.TextBoxFor(m => m.CreatedBy.Username, new { id = "CreatedBy", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h3 class="row">Assigned To</h3>
                            <div class="row">
                                @Html.TextBoxFor(m => m.AssignedTo.Username, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <h3 class="row">Created Date</h3>
                            <div class="row">
                                @Html.TextBoxFor(m => m.CreatedDate, "{0:d MMM yyyy}", new { id = "CreatedDate", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h3 class="row">Target Date</h3>
                            <div class="row">
                                @Html.TextBoxFor(m => m.Eta, "{0:d MMM yyyy}", new { id = "Eta", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="row">Description</h3>
                            <div class="row">
                                @Html.TextAreaFor(m => m.Description, new { id = "Description", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <button type="button" class="btn btn-primary" onclick="UpdateTicket()">Submit</button>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
            <div class="tab-pane" id="comments">
                <div class="" id="commentsSection">
                    <div id="commentsSection" style="padding:39px;">
                        @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedDate))
                        {
                            <div class="well" id="comment">
                                @comment.CreatedBy.Username
                                <sm>@comment.CreatedDate</sm>
                                @Html.Label("commentText", comment.Text)
                            </div>
                        }
                        <div id="newComment">
                            @{
                                var viewmodel = new CommentViewModel
                                {
                                    Spacename = this.ViewContext.RouteData.Values["spacename"].ToString(),
                                    TicketId = Model.Id
                                };
                            }
                            @Html.Partial("_AddComment", viewmodel)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/ticket")
}